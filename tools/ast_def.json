{
"Expr": [
	"Assign   : Box<Expr> variable, Box<Expr> value",
	"Binary   : Box<Expr> left, Token operator, Box<Expr> right",
	"Call     : Rc<Expr> callee, Token paren, Rc<Vec<Expr>> args",
	"Grouping : Box<Expr> expression",
	"Literal  : Object value",
	"Logic    : Box<Expr> left, Token operator, Box<Expr> right",
	"Unary    : Token operator, Box<Expr> right",
	"Variable : Token name, Option<u32> depth"
],
"Stmt": [
	"BlockStmt   : Box<Vec<Stmt>> stmts",
	"ExprStmt    : Expr expr",
	"ForStmt     : Option<Box<Stmt>> init, Option<Expr> condition, Option<Expr> inc, Box<Stmt> block",
    "FunStmt     : Token name, Vec<Token> params, Rc<Vec<Stmt>> body, Option<u32> depth",
	"IfStmt      : Vec<(Expr-Box<Stmt>)> conditionals, Option<Box<Stmt>> else_block",
	"PrintStmt   : Expr expr",
	"ReturnStmt  : Expr expr",
	"VarDeclStmt : Expr variable, Expr value",
	"WhileStmt   : Expr condition, Box<Stmt> block"
]
}
